name: Unit Tests
on:
  push:
    branches: [main, development]
  pull_request:

permissions:
  actions: write
  contents: read

jobs:
  Tests:
    name: Run Unit Tests
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
      - uses: actions/checkout@v4
      - name: Install Pandoc
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            sudo apt-get update -qq && sudo apt-get install -y pandoc
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            choco install pandoc -y
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            brew install pandoc
          fi
        shell: bash
      - name: Install TeX
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            sudo apt-get update -qq && sudo apt-get install -y texlive texlive-xetex
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            choco install miktex -y
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            brew install --cask mactex
          fi
          source ~/.bashrc
        shell: bash
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1.11.3'                         
          show-versioninfo: false              
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          # slug: IMMIDD/GEMS
          # file: lcov.info
          # fail_ci_if_error: true
